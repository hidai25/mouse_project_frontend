{"version":3,"sources":["img/hidai.jpeg","img/gurel.jpg","img/nina.jpg","img/vikram.jpg","img/vasco.png","styles.js","components/Home.js","components/Navbar.js","components/About.js","components/DataCollection.js","components/the_team.js","components/division.js","components/Machine_Learning.js","components/References.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","styled","h3","p","span","blue","slideInLeft","keyframes","slideOutLeft","Page","div","HomePageElm","Home","className","Delay","ms","id","to","class","Component","GridWrapper","Navbar","rel","href","React","About","name","content","src","fixed","left","DataCollection","Contact","List","horizontal","ListItem","ListItemText","primary","secondary","Fragment","Typography","component","variant","color","ListItemAvatar","Image","avatar","hidai","Divider","gurel","nina","vikram","vasco","Projects","props","bottom","References","aria-label","button","divider","light","Main","exact","path","Machine_Learning","the_team","division","App","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.84f0f841.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hidai.3326f7a9.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/gurel.125e8bab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nina.aa412a0f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vikram.384bb195.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vasco.ee3f4fd1.png\";","import styled from 'styled-components';\nimport { blue } from '@carbon/colors';\n\nexport const SectionTitle = styled.h3`\n  margin-top: 1.5rem;\n  margin-bottom: 0.5rem;\n`;\n\nexport const Paragraph = styled.p`\n  white-space: pre-wrap;\n`;\n\nexport const Pill = styled.span`\n  display: inline-block;\n  margin-right: 0.75rem;\n  margin-bottom: 0.75rem;\n  padding: 0.5rem 1rem;\n  background-color: ${blue[20]};\n  color: ${blue[70]};\n  border: 3px solid ${blue[70]};\n  border-radius: 2px;\n  font-weight: bold;\n`;\n","\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport '../styles';\nimport '../App.css';\nimport { Link } from 'react-router-dom';\nimport { keyframes } from \"styled-components\"\nimport Typist from 'react-typist';\n// import code from '../img/code.jpg';\n\n\n// import Fade from 'react-reveal/Fade';\n\n// animation to slide in the home page from left\nconst slideInLeft = keyframes`\n  from {\n    -webkit-transform: translate3d(-100%, 0, 0);\n    transform: translate3d(-100%, 0, 0);\n    visibility: visible;\n  }\n\n  to {\n    -webkit-transform: translate3d(0, 0, 0);\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\n// animation to slide out the home page to the left\nconst slideOutLeft = keyframes`\n  from {\n    -webkit-transform: translate3d(0, 0, 0);\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    visibility: hidden;\n    -webkit-transform: translate3d(-100%, 0, 0);\n    transform: translate3d(-100%, 0, 0);\n  }\n`;\n\nconst Page = styled.div`\nposition: relative;\nwidth: 100vw;\nheight: 100vh;\nbackground-color: #283040;\nfont-family: \"Open Sans\", sans-serif;\nfont-align:center;\n\n`;\n\n\n// apply the correct animation based on the transition state class name.\nconst HomePageElm = styled(Page)`\n  &.page-enter {\n    animation: ${slideInLeft} 0.2s forwards;\n  }\n  &.page-exit {\n    animation: ${slideOutLeft} 0.2s forwards;\n  }\n`;\n\n\nclass Home extends Component {\n\n  render() {\n    return (\n      // <div className=\"home\">\n        <div className=\"home\" >\n      <Page>\n      <HomePageElm>\n\n      <Typist className=\"MyTypist\">\n        This is a  <span className = \"name\">Human-computer interaction project</span>. A real-time Hand Gesture Recognition system.\n         <Typist.Delay ms={5000} />\n      </Typist>\n      <div id=\"arrowAnim\">\n    <Link to=\"/about\">\n        <div class=\"arrowSliding\">\n\n          <div class=\"arrow\"></div>\n        </div>  </Link>\n<Link to=\"/about\">\n        <div class=\"arrowSliding delay1\">\n          <div class=\"arrow\"></div>\n        </div>\n        </Link>\n        <Link to=\"/about\">\n        <div class=\"arrowSliding delay2\">\n          <div class=\"arrow\"></div>\n        </div>\n        </Link>\n        <Link to=\"/about\">\n        <div class=\"arrowSliding delay3\">\n          <div class=\"arrow\"></div>\n        </div>\n          </Link>\n      </div>\n\n\n\n\n      </HomePageElm>\n      </Page>\n  </div>\n      // </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\nimport styled from 'styled-components';\n// import { useSpring, animated, config } from \"react-spring\";\n// import { Container } from 'styled-container-component';\n// import { Button } from 'styled-button-component';\n// import {  NavbarLink } from 'styled-navbar-component';\n// import { Nav } from 'styled-nav-component';\n\n\n\nconst GridWrapper = styled.div`\n  // display: grid;\n  // grid-gap: 10px;\n  // margin-top: 1em;\n  // margin-left: 6em;\n  // margin-right: 6em;\n  // grid-template-columns: repeat(12, 1fr);\n  // grid-auto-rows: minmax(25px, auto);\n`;\n\n\n\n\n export default class Navbar extends React.Component {\n   render() {\n     return (\n<GridWrapper>\n       <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\n\n\n       <nav className=\"Navbar\">\n         <div className=\"Nav__container\">\n\n\n           <div className=\"Nav__right\">\n             <ul className=\"Nav__item-wrapper\">\n             <li className=\"Nav__item\">\n               <Link className=\"Nav__link\" to=\"/\">Home</Link>\n             </li>\n               <li className=\"Nav__item\">\n                 <Link className=\"Nav__link \" to=\"/About\">About</Link>\n               </li>\n               <li className=\"Nav__item\">\n                 <Link className=\"Nav__link \" to=\"/DataCollection\">Data Collection</Link>\n               </li>\n               <li className=\"Nav__item\">\n                 <Link className=\"Nav__link\" to=\"/Machine Learning\">Machine Learning</Link>\n               </li>\n               <li className=\"Nav__item\">\n                 <Link className=\"Nav__link\" to=\"/The Team\">The Team</Link>\n               </li>\n               <li className=\"Nav__item\">\n                 <Link className=\"Nav__link\" to=\"/Division of Work\">Future Prospects</Link>\n               </li>\n               <li className=\"Nav__item\">\n                 <Link className=\"Nav__link\" to=\"/References\">References</Link>\n               </li>\n             </ul>\n           </div>\n         </div>\n       </nav>\n       </GridWrapper>\n     );\n   }\n }\n","import Fade from 'react-reveal/Fade';\nimport Navbar from './Navbar';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\n// import Footer from 'rc-footer';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faYoutube,\n  faFacebook,\n  faTwitter,\n  faInstagram,\n\tfaGithub\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst GridWrapper = styled.div`\nbackground-color: #e3f2fd;\nfont-family: \"Open Sans\", sans-serif;\n\n`;\n\nclass About extends Component {\n  render() {\n    return (\n       <GridWrapper>\n       <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"></link>\n       <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"></meta>\n       <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n         <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\n         <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\"></script>\n         <Navbar fixed=\"top\" />\n<Fade left>\n          <h2 className=\"title_abou\" >About</h2>\n          </Fade>\n          <p class=\"container\">\n          The inspiration for this project was the movie “Minority Report”, specifically the scene where Tom Cruise is using hand gestures to control the display.\n          Based on the output from tutorial 1 we know the sensor can tell XYZ dimensions/directions, which means that technically we can capture most of the movements of the mouse.\n          We are going to reuse parts of the code from tutorial 1 and modify it to create and open a port to submit data as we move the sensor. More clearly, it’ll be passing the data to a python script. There is a package in python called “PYAUTOGUI” that allows you to control the position of the mouse, which means that once the python application receives the information it can identify changes in the data and correlate those to the mouse position. We will try and capture different movements for the mouse. We will try to at the minimum replicate all the movement classes that the PYAUTOGUI package captures.\n          This pipeline will allow you to transfer the information from the sensor to something that can control the position of the mouse. The motivation for this project is that you can integrate this with any device or display so instead of having to manually select options you can do so via gestures, in other words touch might be augmented or substituted by motion. It could later on be modified to work for people with disabilities or ones who have suffered an injury to their fingers or arms, and allow them to use this as a headband (or similar device) to control the mouse/cursor’s movement.\n          Additionally, this would also be a better option for interaction in a VR or AR world.\n\n          </p>\n\n          <footer class=\"contact-footer\">\n          <div class=\"social\">\n          </div>\n          <br/>\n          <span class=\"credit\">\n          <span class=\"Copyright\">©2020 Copyright</span> <span class=\"footername\"></span>\n          </span>\n          </footer>\n         </GridWrapper>\n    );\n  }\n}\n\nexport default About;\n","import Fade from 'react-reveal/Fade';\nimport Navbar from './Navbar';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\n// import Footer from 'rc-footer';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n\nconst GridWrapper = styled.div`\nbackground-color: #e3f2fd;\nfont-family: \"Open Sans\", sans-serif;\n\n`;\n\nclass DataCollection extends Component {\n  render() {\n    return (\n       <GridWrapper>\n       <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"></link>\n       <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"></meta>\n       <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n         <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\n         <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\"></script>\n         <Navbar fixed=\"top\" />\n<Fade left>\n          <h2 className=\"title_abou\" >Data Collection</h2>\n          </Fade>\n          <p class=\"container\">\n\n          To collect the data, we first had to investigate the “PYAUTOGUI” package to determine the movements and get an idea of how we could compile the code. After some investigation, we decided to use 6 motions, each mapped to a certain movement of the mouse or a click. The movements we chose to collect data on include right swipe, left swipe, upward swipe, downward swipe, spiral, and wave. The swiping movements are used to control the mouse and which direction it will go as we move the sensor, and the spiral and wave gestures are used to imitate the right and left clicks of the mouse. After agreeing on the types of motions, we proceeded with the data collection.\n          For each movement, we decided it would be best to use 75% of the data for training and 25% of the data for testing. To do that, we decided to collect data 30 times for each of the gestures, totaling 180 collections. To add variety to our gestures, we decided to use different speeds for the movements: fast, medium, and slow. These little differences were used to create a real-world-model to accommodate for different users and different speeds. After collecting each data, we labeled them according to their speeds and their types. Finally, we uploaded them to our GitHub repository to proceed with data processing.\n\n          </p>\n\n          <footer class=\"contact-footer\">\n          <div class=\"social\">\n          </div>\n          <br/>\n          <span class=\"credit\">\n          <span class=\"Copyright\">©2020 Copyright</span> <span class=\"footername\"></span>\n          </span>\n          </footer>\n         </GridWrapper>\n    );\n  }\n}\n\nexport default DataCollection;\n","import React from \"react\";\nimport '../styles';\nimport '../App.css';\nimport Fade from 'react-reveal/Fade';\nimport { Google,Facebook, Twitter } from 'react-sharingbuttons'\nimport 'react-sharingbuttons/dist/main.css'\nimport {Helmet} from 'react-helmet';\nimport Navbar from './Navbar';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport hidai from '../img/hidai.jpeg';\nimport gurel from '../img/gurel.jpg';\nimport nina from '../img/nina.jpg';\nimport vikram from '../img/vikram.jpg';\nimport vasco from '../img/vasco.png';\nimport { List, Image } from 'semantic-ui-react'\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\n// import {Divider} from '@material-ui/core'\n\n\nimport {  MDBRow, MDBCol, MDBCard,  MDBCardBody, MDBIcon } from \"mdbreact\";\n\n\nconst GridWrapper = styled.div`\n\n`;\n\nexport default class Contact extends React.Component {\n\trender() {\n\t\treturn (\n<GridWrapper>\n\n<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"></link>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"></meta>\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\"></script>\n\n\n\n\t\t\t   <Navbar fixed=\"top\" />\n\n         <Fade left>\n           <h2>Our amazing team</h2>\n           </Fade>\n\n\t\t\t\t\t<div class=\"topContainer\">\n\n<List horizontal>\n<ListItem >\n\t\t\t <ListItemText\n\t\t\t\t primary=\"Hidai Bar-mor (hidai25@gmail.com)\"\n\t\t\t\t secondary={\n\t\t\t\t\t <React.Fragment>\n\t\t\t\t\t\t <Typography\n\t\t\t\t\t\t\t component=\"span\"\n\t\t\t\t\t\t\t variant=\"body2\"\n\t\t\t\t\t\t\t // className={classes.inline}\n\t\t\t\t\t\t\t color=\"textPrimary\"\n\t\t\t\t\t\t >\n\n\t\t\t\t\t\t </Typography>\n\t\t\t\t\t\t {\" Hidai did the the data collection ,real time python script, github management and web development of the website of the project\"}\n\t\t\t\t\t </React.Fragment>\n\t\t\t\t }\n\t\t\t />\n\t\t\t <ListItemAvatar class=\"avatar\" >\n\t\t\t\t <Image avatar src={hidai} />\n\t\t\t </ListItemAvatar>\n\t\t </ListItem >\n  <Divider />\n<ListItem >\n\t\t\t <ListItemText\n\t\t\t\t primary=\"Gurel Ari (gurelari.ivy@gmail.com)\"\n\t\t\t\t secondary={\n\t\t\t\t\t <React.Fragment>\n\t\t\t\t\t\t <Typography\n\t\t\t\t\t\t\t component=\"span\"\n\t\t\t\t\t\t\t variant=\"body2\"\n\t\t\t\t\t\t\t // className={classes.inline}\n\t\t\t\t\t\t\t color=\"textPrimary\"\n\t\t\t\t\t\t >\n\n\t\t\t\t\t\t </Typography>\n\t\t\t\t\t\t {\" \tGurel did the data collection for the project and helped writing the final report\"}\n\t\t\t\t\t </React.Fragment>\n\t\t\t\t }\n\t\t\t />\n\t\t\t <ListItemAvatar class=\"avatar\" >\n\t\t\t\t <Image avatar src={gurel} />\n\t\t\t </ListItemAvatar>\n\t\t </ListItem >\n<Divider />\n<ListItem >\n\t\t\t <ListItemText\n\t\t\t\t primary=\"Nina Tabari ( naz706@g.harvard.edu)\"\n\t\t\t\t secondary={\n\t\t\t\t\t <React.Fragment>\n\t\t\t\t\t\t <Typography\n\t\t\t\t\t\t\t component=\"span\"\n\t\t\t\t\t\t\t variant=\"body2\"\n\t\t\t\t\t\t\t // className={classes.inline}\n\t\t\t\t\t\t\t color=\"textPrimary\"\n\t\t\t\t\t\t >\n\n\t\t\t\t\t\t </Typography>\n\t\t\t\t\t\t {\"\tNina did the python script to deploy and run the machine learning model in production and the wrote the reports\"}\n\t\t\t\t\t </React.Fragment>\n\t\t\t\t }\n\t\t\t />\n\t\t\t <ListItemAvatar class=\"avatar\" >\n\t\t\t\t <Image avatar src={nina} />\n\t\t\t </ListItemAvatar>\n\t\t </ListItem >\n\n<Divider />\n\t\t\t\t\t <ListItem >\n\t\t\t\t\t \t\t\t\t<ListItemText\n\t\t\t\t\t \t\t\t\t\tprimary=\"Vikram Maduskar (vim882@g.harvard.edu)\"\n\t\t\t\t\t \t\t\t\t\tsecondary={\n\t\t\t\t\t \t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t \t\t\t\t\t\t\t<Typography\n\t\t\t\t\t \t\t\t\t\t\t\t\tcomponent=\"span\"\n\t\t\t\t\t \t\t\t\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\t \t\t\t\t\t\t\t\t// className={classes.inline}\n\t\t\t\t\t \t\t\t\t\t\t\t\tcolor=\"textPrimary\"\n\t\t\t\t\t \t\t\t\t\t\t\t>\n\n\t\t\t\t\t \t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t \t\t\t\t\t\t\t{\" \tVikram was reponsible for the machine learning part where he preprocessed the data build and ran the model\"}\n\t\t\t\t\t \t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t \t\t\t\t\t}\n\t\t\t\t\t \t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<ListItemAvatar class=\"avatar\" >\n\t\t\t\t\t \t\t\t\t\t<Image avatar src={vikram} />\n\t\t\t\t\t \t\t\t\t</ListItemAvatar>\n\t\t\t\t\t \t\t\t</ListItem >\n\t\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t\t<ListItem >\n\t\t \t\t\t\t\t \t\t\t\t<ListItemText\n\t\t \t\t\t\t\t \t\t\t\t\tprimary=\"Vasco Meerman (vmeerman.appdev@gmail.com)\"\n\t\t \t\t\t\t\t \t\t\t\t\tsecondary={\n\t\t \t\t\t\t\t \t\t\t\t\t\t<React.Fragment>\n\t\t \t\t\t\t\t \t\t\t\t\t\t\t<Typography\n\t\t \t\t\t\t\t \t\t\t\t\t\t\t\tcomponent=\"span\"\n\t\t \t\t\t\t\t \t\t\t\t\t\t\t\tvariant=\"body2\"\n\t\t \t\t\t\t\t \t\t\t\t\t\t\t\t// className={classes.inline}\n\t\t \t\t\t\t\t \t\t\t\t\t\t\t\tcolor=\"textPrimary\"\n\t\t \t\t\t\t\t \t\t\t\t\t\t\t>\n\n\t\t \t\t\t\t\t \t\t\t\t\t\t\t</Typography>\n\t\t \t\t\t\t\t \t\t\t\t\t\t\t{\" Vasco was reponsible for cleaning and preprocessing the data and helped with the implementation of the machine learnign model\"}\n\t\t \t\t\t\t\t \t\t\t\t\t\t</React.Fragment>\n\t\t \t\t\t\t\t \t\t\t\t\t}\n\t\t \t\t\t\t\t \t\t\t\t/>\n\t\t \t\t\t\t\t\t\t\t\t<ListItemAvatar class=\"avatar\" >\n\t\t \t\t\t\t\t \t\t\t\t\t<Image avatar src={vasco} />\n\t\t \t\t\t\t\t \t\t\t\t</ListItemAvatar>\n\t\t \t\t\t\t\t \t\t\t</ListItem >\n</List>\n\n  <footer class=\"contact-footer\">\n  <div class=\"social\">\n\n\n  </div>\n  <br/>\n  <span class=\"credit\">\n  <span class=\"Copyright\">©2020 Copyright</span> <span class=\"footername\"></span>\n  </span>\n  </footer>\n\t</div>\n\n</GridWrapper>\n\t\t);\n\t}\n}\n\n\n\n\n\n\n\n// <MDBCard className=\"my-5 px-5 pb-5 text-center\">\n// \t\t\t\t<MDBCardBody>\n// \t\t\t\t\t<p className=\"grey-text w-responsive mx-auto mb-5\">\n// \t\t\t\t\tOur amazing team worked hard day and night to make this project happen:\n// \t\t\t\t\t</p>\n// \t\t\t\t\t<MDBRow>\n// \t\t\t\t\t\t<MDBCol lg=\"3\" md=\"6\" className=\"mb-lg-0 mb-5\">\n// \t\t\t\t\t\t\t<img\n// \t\t\t\t\t\t\t\ttag=\"img\"\n// \t\t\t\t\t\t\t\tsrc={hidai}\n// \t\t\t\t\t\t\t\tclassName=\"rounded-circle z-depth-1 img-fluid\"\n// \t\t\t\t\t\t\t\talt=\"Sample avatar\"\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t<h5 className=\"font-weight-bold mt-4 mb-3\">Hidai Bar-mor (hidai25@gmail.com)</h5>\n// \t\t\t\t\t\t\t<p className=\"grey-text\">\n// \t\t\t\t\t\t\t\tHidai did the the data collection ,real time python script, github management and web development of the website of the project\n// \t\t\t\t\t\t\t</p>\n//\n// \t\t\t\t\t\t</MDBCol>\n//\n// \t\t\t\t\t\t<MDBCol lg=\"3\" md=\"6\" className=\"mb-lg-0 mb-5\">\n// \t\t\t\t\t\t\t<img\n// \t\t\t\t\t\t\t\ttag=\"img\"\n// \t\t\t\t\t\t\t\tsrc={gurel}\n// \t\t\t\t\t\t\t\tclassName=\"rounded-circle z-depth-1 img-fluid\"\n// \t\t\t\t\t\t\t\talt=\"Sample avatar\"\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t<h5 className=\"font-weight-bold mt-4 mb-3\">Gurel Ari (gurelari.ivy@gmail.com)</h5>\n// \t\t\t\t\t\t\t<p className=\"grey-text\">\n// \t\t\t\t\t\t\t\tGurel did the data collection for the project and helped writing the final report\n// \t\t\t\t\t\t\t</p>\n//\n// \t\t\t\t\t\t</MDBCol>\n//\n// \t\t\t\t\t\t<MDBCol lg=\"3\" md=\"6\" className=\"mb-lg-0 mb-5\">\n// \t\t\t\t\t\t\t<img\n// \t\t\t\t\t\t\t\ttag=\"img\"\n// \t\t\t\t\t\t\t\tsrc={nina}\n// \t\t\t\t\t\t\t\tclassName=\"rounded-circle z-depth-1 img-fluid\"\n// \t\t\t\t\t\t\t\talt=\"Sample avatar\"\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t<h5 className=\"font-weight-bold mt-4 mb-3\">Nina Tabari ( naz706@g.harvard.edu)</h5>\n// \t\t\t\t\t\t\t<p className=\"grey-text\">\n// \t\t\t\t\t\t\t\tNina did the python script to deploy and run the machine learning model in production and the wrote the reports\n// \t\t\t\t\t\t\t</p>\n// \t\t\t\t\t\t</MDBCol>\n//\n// \t\t\t\t\t\t<MDBCol lg=\"3\" md=\"6\" className=\"mb-lg-0 mb-5\">\n// \t\t\t\t\t\t\t<img\n// \t\t\t\t\t\t\t\tsrc={vikram}\n// \t\t\t\t\t\t\t\tclassName=\"rounded-circle z-depth-1 img-fluid\"\n// \t\t\t\t\t\t\t\talt=\"Sample avatar\"\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t<h5 className=\"font-weight-bold mt-4 mb-3\">Vikram Maduskar (vim882@g.harvard.edu)</h5>\n// \t\t\t\t\t\t\t<p className=\"grey-text\">\n// \t\t\t\t\t\t\t\tVikram was reponsible for the machine learning part where he preprocessed the data build and ran the model\n// \t\t\t\t\t\t\t</p>\n// \t\t\t\t\t\t\t<img\n// \t\t\t\t\t\t\t\tsrc={vasco}\n// \t\t\t\t\t\t\t\tclassName=\"rounded-circle z-depth-1 img-fluid\"\n// \t\t\t\t\t\t\t\talt=\"Sample avatar\"\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t<p className=\"text-uppercase blue-text\">Vasco Meerman (vmeerman.appdev@gmail.com)</p>\n// \t\t\t\t\t\t\t<p className=\"grey-text\">\n// \t\t\t\t\t\t\t\tVasco was reponsible for cleaning and preprocessing the data and helped with the implementation of the machine learnign model\n// \t\t\t\t\t\t\t</p>\n// \t\t\t\t\t\t</MDBCol>\n// \t\t\t\t\t</MDBRow>\n// \t\t\t\t</MDBCardBody>\n// \t\t\t</MDBCard>\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n","import React from 'react';\nimport Thumbnail from '../Thumbnail.js'; // Import the Thumbnail component\nimport '../App.css';\nimport Navbar from './Navbar';\nimport styled from 'styled-components';\nimport Fade from 'react-reveal/Fade';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faYoutube,\n  faFacebook,\n  faTwitter,\n  faInstagram,\n\tfaGithub\n} from \"@fortawesome/free-brands-svg-icons\";\n\n\nconst GridWrapper = styled.div`\nbackground-color: #e3f2fd;\nfont-family: \"Open Sans\", sans-serif;\n\n`;\n\nfunction Projects(props) {\n  return (\n    // Render a Thumbnail component\n\n\n    <GridWrapper>\n    <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"></link>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"></meta>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\n      <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\"></script>\n\n\n    <Navbar fixed=\"top\" />\n    <Fade left>\n      <h2>Future Prospects</h2>\n      </Fade>\n  <div class=\"container\">\n  </div>\n      <footer class=\"contact-footer\">\n      <div class=\"social\">\n      </div>\n      <br/>\n      <span class=\"credit\">\n      <span class=\"Copyright\">©2020 Copyright</span>\n      </span>\n      </footer>\n</GridWrapper>\n  )\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Navbar from './Navbar';\nimport '../styles';\nimport '../App.css';\nimport Fade from 'react-reveal/Fade';\nimport ProgressBar from 'react-bootstrap/ProgressBar'\nimport { Progress } from 'reactstrap';\n// import hidai from '../img/hidai.jpeg';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faYoutube,\n  faFacebook,\n  faTwitter,\n  faInstagram,\n\tfaGithub\n} from \"@fortawesome/free-brands-svg-icons\";\n\n\nconst GridWrapper = styled.div`\n  // display: grid;\n  // grid-gap: 10px;\n  // margin-top: 1em;\n  // margin-left: 6em;\n  // margin-right: 6em;\n  // grid-template-columns: repeat(12, 1fr);\n  // grid-auto-rows: minmax(25px, auto);\n`;\n\nclass Home extends Component {\n\n  render() {\n    return (\n\n      <GridWrapper>\n      <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"></link>\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"></meta>\n      <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\n        <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\"></script>\n\n\n         <Navbar fixed=\"top\" />\n          <br/>\n\n<div class=\"plate\">\n<Fade left>\n  <h2 class=\"script\"><span>Machine Learning</span></h2>\n  </Fade>\n  </div>\n\n<br/>\n          <div class=\"row\">\n            <div class=\"col-sm-6\">\n\n              <div class=\"skillstxt\"></div>\n            </div>\n            <div class=\"col-sm-6\">\n\n\n            <div class=\"skills\">\n            <h3> Overview</h3>\n            The project is focused on replicating the movements of a traditional mouse using a STM32 sensortile and a python package called PYAUTOGUI. The idea is that you can integrate a sensortile flashed with the appropriate embedded alogorithm and ML into any wearable device or display which instead of requiring the user to manually select options allows, enables control via gestures. Our POC can be extended further to enable people with permanent disabilities or those who have suffered an injury to their fingers or arms, to use this as a fingreband (or headband or a similar device) to control the mouse/cursor movement. Additionally, this can also be implemented for gesture driven interactions in a VR or AR world.\n\n          <h3>  Data Description</h3>\n            The dataset used for building the classification models was collected by creating and opening a data port mapping to the STM32 Sensortile hardware as we moved the sensor by hand. We have capture data fom the sensor's Accelaratometer, Magnetometer and Gyroscope6 along the X,Y and Z axis for 6 different hand gestures for the mouse:Up, Down,Left,Right,Spiral and Wave. We collected data for 15 sets for each movetype type in multiple csv files that were merged to create a single csv file. This file was then split into a training dataset csv file and a test dataset csv file.\n\n          <h3>  Our Methodology</h3>\n            Step 1. Environment Setup\n            Step 2. Data Setup\n            Step 3. Exploratory Data Analysis\n            Step 4. Classifier Model Training & Evaluate Models\n            Model 1:Logitisc Regression\n            Model 2: SVM\n            Model 3:Random Forest\n            Model 4: AdaBoost\n            Model 5: XGBoost\n            Step 5. Model Selection\n            Step 6. Hyper Parameter Tuning Of Selected Model\n            Step 7. Save Persistent Finalized Model to Disk\n\n\n            <h3>5. BEST MODEL SELECTION</h3>\nBased upon the above model performance statistics, we can observe that the XGBoost model at 90% accuracy, Precision between 84% to 95% and recall between 80% to 99% for the 6 classes. Comparing the model performancewith other models we observe that Model 5(XGBoost) easily outperforms the other models by a wide margin. The difference in performance is so large that there is no need to even consider an ensemble approach and going with XGBoost as the lone model will be the best approach in our case. Therefore, we select this model as the winner and try to tune in further and see if it imrpves further.\n\n<h4>Model Tuning Result:</h4>\nWe see a massive improvement in the performance of our model! The accuracy has improved from 85% to aprox 98%. We see similar improvements in Precision and Recall as well.\n\n<h3> 7. SAVE PERSISTANT FINAL MODEL TO DISK</h3>\nAfter training our model, it is desirable to have a way to persist the model for future use without having to retrain. Therefore, we save our trained and hypertuned model to the disk from where it can be re-loaded and used anytime to perform classifications for new input data. The model is stored in a serialized form and deserialized when re-loaded for use. We will use the joblib utility to create and save the seralized persistent model.This fully trained and persistent model is now fully ready to be deployed and invoked in a production environment and peform classification for new input data going forward.\n\n\n\n\n\n\n\n            </div>\n\n            </div>\n          </div>\n          <footer bottom=\"©2020 Copyright\">\n          <div class=\"social\">\n</div>\n<br/>\n<span>\n  ©2020 Copyright<span class=\"footername\"></span>\n  </span>\n</footer>\n\n\n\n  </GridWrapper>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport Thumbnail from '../Thumbnail.js'; // Import the Thumbnail component\nimport '../App.css';\nimport Navbar from './Navbar';\nimport styled from 'styled-components';\nimport Fade from 'react-reveal/Fade';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { List,ListItem,ListItemText,Divider} from '@material-ui/core'\n\n\nconst GridWrapper = styled.div`\nbackground-color: #e3f2fd;\nfont-family: \"Open Sans\", sans-serif;\n\n`;\n\nfunction References(props) {\n  return (\n    // Render a Thumbnail component\n\n\n    <GridWrapper>\n    <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"></link>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"></meta>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\n      <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\"></script>\n\n\n    <Navbar fixed=\"top\" />\n    <Fade left>\n      <h2>References</h2>\n      </Fade>\n  <div class=\"container\">\n\n  <List component=\"nav\"  aria-label=\"mailbox folders\">\n    <ListItem button>\n  1.   https://machinelearningmastery.com/how-to-model-human-activity-from-smartphone-data/\n\n    </ListItem>\n    <Divider />\n    <ListItem button divider>\n  2.  http://stanford.edu/class/ee267/Spring2018/report_adu_bran-melendez.pdf\n\n      <ListItemText primary=\"Drafts\" />\n    </ListItem>\n    <ListItem button>\n  3.   https://lembergsolutions.com/blog/motion-gesture-detection-using-tensorflow-android\n\n      <ListItemText primary=\"Trash\" />\n    </ListItem>\n    <Divider light />\n\n  </List>\n\n\n  </div>\n      <footer class=\"contact-footer\">\n      <div class=\"social\">\n      </div>\n      <br/>\n      <span class=\"credit\">\n      <span class=\"Copyright\">©2020 Copyright</span>\n      </span>\n      </footer>\n</GridWrapper>\n  )\n}\n\nexport default References;\n","import React from 'react';\nimport { Switch, Route} from 'react-router-dom';\nimport the_team from './the_team';\nimport division from './division';\nimport Home from './Home';\nimport About from './About';\nimport DataCollection from './DataCollection';\nimport Machine_Learning from './Machine_Learning';\nimport References from './References';\n\n\nconst Main = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Home}/>\n    <Route path=\"/about\" component={About}/>\n    <Route path=\"/DataCollection\" component={DataCollection}/>\n     <Route path=\"/Machine Learning\" component={Machine_Learning}/>\n    <Route path=\"/The team\" component={the_team}/>\n    <Route path=\"/Division of Work\" component={division}/>\n    <Route path=\"/References\" component={References}/>\n  </Switch>\n)\n\nexport default Main;\n","\nimport React from 'react';\nimport './App.css';\nimport {  Switch, Route } from 'react-router-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport {Layout, Header, Navigation, Drawer, Content, download} from 'react-mdl';\nimport Home from './components/Home';\nimport About from './components/About';\nimport DataCollection from './components/DataCollection';\nimport the_team from './components/the_team.js';\nimport division from './components/division.js';\nimport Machine_Learning from './components/Machine_Learning';\nimport Main from './components/main';\n\n\nfunction App() {\n  return (\n\n\n\n   <div className=\"App\">\n   <Layout>\n           <head>\n           </head>\n           <Content>\n               <Main/>\n           </Content>\n\n       </Layout>\n   </div>\n     );\n   }\n\n   export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n// const isLocalhost = Boolean(\n//   window.location.hostname === 'localhost' ||\n//     // [::1] is the IPv6 localhost address.\n//     window.location.hostname === '[::1]' ||\n//     // 127.0.0.0/8 are considered localhost for IPv4.\n//     window.location.hostname.match(\n//       /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n//     )\n// );\n//\n// export function register(config) {\n//   if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n//     // The URL constructor is available in all browsers that support SW.\n//     const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n//     if (publicUrl.origin !== window.location.origin) {\n//       // Our service worker won't work if PUBLIC_URL is on a different origin\n//       // from what our page is served on. This might happen if a CDN is used to\n//       // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n//       return;\n//     }\n//\n//     window.addEventListener('load', () => {\n//       const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n//\n//       if (isLocalhost) {\n//         // This is running on localhost. Let's check if a service worker still exists or not.\n//         checkValidServiceWorker(swUrl, config);\n//\n//         // Add some additional logging to localhost, pointing developers to the\n//         // service worker/PWA documentation.\n//         navigator.serviceWorker.ready.then(() => {\n//           console.log(\n//             'This web app is being served cache-first by a service ' +\n//               'worker. To learn more, visit https://bit.ly/CRA-PWA'\n//           );\n//         });\n//       } else {\n//         // Is not localhost. Just register service worker\n//         registerValidSW(swUrl, config);\n//       }\n//     });\n//   }\n// }\n//\n// function registerValidSW(swUrl, config) {\n//   navigator.serviceWorker\n//     .register(swUrl)\n//     .then(registration => {\n//       registration.onupdatefound = () => {\n//         const installingWorker = registration.installing;\n//         if (installingWorker == null) {\n//           return;\n//         }\n//         installingWorker.onstatechange = () => {\n//           if (installingWorker.state === 'installed') {\n//             if (navigator.serviceWorker.controller) {\n//               // At this point, the updated precached content has been fetched,\n//               // but the previous service worker will still serve the older\n//               // content until all client tabs are closed.\n//               console.log(\n//                 'New content is available and will be used when all ' +\n//                   'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n//               );\n//\n//               // Execute callback\n//               if (config && config.onUpdate) {\n//                 config.onUpdate(registration);\n//               }\n//             } else {\n//               // At this point, everything has been precached.\n//               // It's the perfect time to display a\n//               // \"Content is cached for offline use.\" message.\n//               console.log('Content is cached for offline use.');\n//\n//               // Execute callback\n//               if (config && config.onSuccess) {\n//                 config.onSuccess(registration);\n//               }\n//             }\n//           }\n//         };\n//       };\n//     })\n//     .catch(error => {\n//       console.error('Error during service worker registration:', error);\n//     });\n// }\n//\n// function checkValidServiceWorker(swUrl, config) {\n//   // Check if the service worker can be found. If it can't reload the page.\n//   fetch(swUrl, {\n//     headers: { 'Service-Worker': 'script' },\n//   })\n//     .then(response => {\n//       // Ensure service worker exists, and that we really are getting a JS file.\n//       const contentType = response.headers.get('content-type');\n//       if (\n//         response.status === 404 ||\n//         (contentType != null && contentType.indexOf('javascript') === -1)\n//       ) {\n//         // No service worker found. Probably a different app. Reload the page.\n//         navigator.serviceWorker.ready.then(registration => {\n//           registration.unregister().then(() => {\n//             window.location.reload();\n//           });\n//         });\n//       } else {\n//         // Service worker found. Proceed as normal.\n//         registerValidSW(swUrl, config);\n//       }\n//     })\n//     .catch(() => {\n//       console.log(\n//         'No internet connection found. App is running in offline mode.'\n//       );\n//     });\n// }\n//\n// export function unregister() {\n//   if ('serviceWorker' in navigator) {\n//     navigator.serviceWorker.ready\n//       .then(registration => {\n//         registration.unregister();\n//       })\n//       .catch(error => {\n//         console.error(error.message);\n//       });\n//   }\n// }\n\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n//\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n//\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter} from 'react-router-dom';\nimport {  Switch, Route } from 'react-router-dom';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render((\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n\n), document.getElementById('root'))\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}