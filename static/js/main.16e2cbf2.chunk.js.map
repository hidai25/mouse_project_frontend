{"version":3,"sources":["styles.js","components/Home.js","components/Navbar.js","components/About.js","components/Contact.js","components/Projects.js","components/Academics_and_Skills.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["styled","h3","p","span","blue","slideInLeft","keyframes","slideOutLeft","Page","div","HomePageElm","Home","className","Delay","ms","id","to","class","Component","GridWrapper","Navbar","rel","href","React","About","name","content","src","fixed","left","Contact","Helmet","Projects","props","bottom","Main","exact","path","component","Academics_and_Skills","App","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.16e2cbf2.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { blue } from '@carbon/colors';\n\nexport const SectionTitle = styled.h3`\n  margin-top: 1.5rem;\n  margin-bottom: 0.5rem;\n`;\n\nexport const Paragraph = styled.p`\n  white-space: pre-wrap;\n`;\n\nexport const Pill = styled.span`\n  display: inline-block;\n  margin-right: 0.75rem;\n  margin-bottom: 0.75rem;\n  padding: 0.5rem 1rem;\n  background-color: ${blue[20]};\n  color: ${blue[70]};\n  border: 3px solid ${blue[70]};\n  border-radius: 2px;\n  font-weight: bold;\n`;\n","\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport '../styles';\nimport '../App.css';\nimport { Link } from 'react-router-dom';\nimport { keyframes } from \"styled-components\"\nimport Typist from 'react-typist';\n// import code from '../img/code.jpg';\n\n\n// import Fade from 'react-reveal/Fade';\n\n// animation to slide in the home page from left\nconst slideInLeft = keyframes`\n  from {\n    -webkit-transform: translate3d(-100%, 0, 0);\n    transform: translate3d(-100%, 0, 0);\n    visibility: visible;\n  }\n\n  to {\n    -webkit-transform: translate3d(0, 0, 0);\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\n// animation to slide out the home page to the left\nconst slideOutLeft = keyframes`\n  from {\n    -webkit-transform: translate3d(0, 0, 0);\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    visibility: hidden;\n    -webkit-transform: translate3d(-100%, 0, 0);\n    transform: translate3d(-100%, 0, 0);\n  }\n`;\n\nconst Page = styled.div`\nposition: relative;\nwidth: 100vw;\nheight: 100vh;\nbackground-color: #283040;\nfont-family: \"Open Sans\", sans-serif;\nfont-align:center;\n\n`;\n\n\n// apply the correct animation based on the transition state class name.\nconst HomePageElm = styled(Page)`\n  &.page-enter {\n    animation: ${slideInLeft} 0.2s forwards;\n  }\n  &.page-exit {\n    animation: ${slideOutLeft} 0.2s forwards;\n  }\n`;\n\n\nclass Home extends Component {\n\n  render() {\n    return (\n      // <div className=\"home\">\n        <div className=\"home\" >\n      <Page>\n      <HomePageElm>\n\n      <Typist className=\"MyTypist\">\n        This is a  <span className = \"name\">Human-computer interaction project</span>. A real-time Hand Gesture Recognition system.\n         <Typist.Delay ms={5000} />\n      </Typist>\n      <div id=\"arrowAnim\">\n    <Link to=\"/about\">\n        <div class=\"arrowSliding\">\n\n          <div class=\"arrow\"></div>\n        </div>  </Link>\n<Link to=\"/about\">\n        <div class=\"arrowSliding delay1\">\n          <div class=\"arrow\"></div>\n        </div>\n        </Link>\n        <Link to=\"/about\">\n        <div class=\"arrowSliding delay2\">\n          <div class=\"arrow\"></div>\n        </div>\n        </Link>\n        <Link to=\"/about\">\n        <div class=\"arrowSliding delay3\">\n          <div class=\"arrow\"></div>\n        </div>\n          </Link>\n      </div>\n\n\n\n\n      </HomePageElm>\n      </Page>\n  </div>\n      // </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\nimport styled from 'styled-components';\n// import { useSpring, animated, config } from \"react-spring\";\n// import { Container } from 'styled-container-component';\n// import { Button } from 'styled-button-component';\n// import {  NavbarLink } from 'styled-navbar-component';\n// import { Nav } from 'styled-nav-component';\n\n\n\nconst GridWrapper = styled.div`\n  // display: grid;\n  // grid-gap: 10px;\n  // margin-top: 1em;\n  // margin-left: 6em;\n  // margin-right: 6em;\n  // grid-template-columns: repeat(12, 1fr);\n  // grid-auto-rows: minmax(25px, auto);\n`;\n\n\n\n\n export default class Navbar extends React.Component {\n   render() {\n     return (\n<GridWrapper>\n       <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\n\n\n       <nav className=\"Navbar\">\n         <div className=\"Nav__container\">\n\n\n           <div className=\"Nav__right\">\n             <ul className=\"Nav__item-wrapper\">\n             <li className=\"Nav__item\">\n               <Link className=\"Nav__link\" to=\"/\">Home</Link>\n             </li>\n               <li className=\"Nav__item\">\n                 <Link className=\"Nav__link \" to=\"/About\">About</Link>\n               </li>\n               <li className=\"Nav__item\">\n                 <Link className=\"Nav__link\" to=\"/Academics_and_Skills\">Machine Learning</Link>\n               </li>\n               <li className=\"Nav__item\">\n                 <Link className=\"Nav__link\" to=\"/Projects\">Division of work</Link>\n               </li>\n               <li className=\"Nav__item\">\n                 <Link className=\"Nav__link\" to=\"/Contact\">The team</Link>\n               </li>\n             </ul>\n           </div>\n         </div>\n       </nav>\n       </GridWrapper>\n     );\n   }\n }\n","import Fade from 'react-reveal/Fade';\nimport Navbar from './Navbar';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\n// import Footer from 'rc-footer';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faYoutube,\n  faFacebook,\n  faTwitter,\n  faInstagram,\n\tfaGithub\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst GridWrapper = styled.div`\nbackground-color: #e3f2fd;\nfont-family: \"Open Sans\", sans-serif;\n\n`;\n\nclass About extends Component {\n  render() {\n    return (\n       <GridWrapper>\n       <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"></link>\n       <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"></meta>\n       <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n         <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\n         <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\"></script>\n         <Navbar fixed=\"top\" />\n<Fade left>\n          <h2 className=\"title_abou\" >About</h2>\n          </Fade>\n          <p class=\"container\">\n\n          </p>\n\n          <footer class=\"contact-footer\">\n          <div class=\"social\">\n          </div>\n          <br/>\n          <span class=\"credit\">\n          <span class=\"Copyright\">©2020 Copyright</span> <span class=\"footername\"></span>\n          </span>\n          </footer>\n         </GridWrapper>\n    );\n  }\n}\n\nexport default About;\n","import React from \"react\";\nimport '../styles';\nimport '../App.css';\nimport Fade from 'react-reveal/Fade';\nimport { Google,Facebook, Twitter } from 'react-sharingbuttons'\nimport 'react-sharingbuttons/dist/main.css'\nimport {Helmet} from 'react-helmet';\nimport Navbar from './Navbar';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faYoutube,\n  faFacebook,\n  faTwitter,\n  faInstagram,\n\tfaGithub\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst GridWrapper = styled.div`\n\n`;\n\nexport default class Contact extends React.Component {\n\trender() {\n\t\treturn (\n<GridWrapper>\n\n\n\t\t\t   <Navbar fixed=\"top\" />\n\n         <Fade left>\n           <h2>The team</h2>\n           </Fade>\n\t\t\t<Helmet>\n\t\t\t\t\t\t\t<style>{'body { background-color: #323f54;text-align: center }'}</style>\n\t\t\t\t\t</Helmet>\n<div class=\"container-contact100\">\n\t\t\t<span class=\"contact100-form-title-2\">\n\n\t\t\t</span>\n\n\n  </div>\n\n  <footer class=\"contact-footer\">\n  <div class=\"social\">\n\n\n  </div>\n  <br/>\n  <span class=\"credit\">\n  <span class=\"Copyright\">©2020 Copyright</span> <span class=\"footername\"></span>\n  </span>\n  </footer>\n\n</GridWrapper>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport Thumbnail from '../Thumbnail.js'; // Import the Thumbnail component\nimport '../App.css';\nimport Navbar from './Navbar';\nimport styled from 'styled-components';\nimport Fade from 'react-reveal/Fade';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faYoutube,\n  faFacebook,\n  faTwitter,\n  faInstagram,\n\tfaGithub\n} from \"@fortawesome/free-brands-svg-icons\";\n\n\nconst GridWrapper = styled.div`\nbackground-color: #e3f2fd;\nfont-family: \"Open Sans\", sans-serif;\n\n`;\n\nfunction Projects(props) {\n  return (\n    // Render a Thumbnail component\n\n\n    <GridWrapper>\n    <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"></link>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"></meta>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\n      <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\"></script>\n\n\n    <Navbar fixed=\"top\" />\n    <Fade left>\n      <h2>Division of Work</h2>\n      </Fade>\n  <div class=\"container\">\n  </div>\n      <footer class=\"contact-footer\">\n      <div class=\"social\">\n      </div>\n      <br/>\n      <span class=\"credit\">\n      <span class=\"Copyright\">©2020 Copyright</span>\n      </span>\n      </footer>\n</GridWrapper>\n  )\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Navbar from './Navbar';\nimport '../styles';\nimport '../App.css';\nimport Fade from 'react-reveal/Fade';\nimport ProgressBar from 'react-bootstrap/ProgressBar'\nimport { Progress } from 'reactstrap';\n// import hidai from '../img/hidai.jpeg';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faYoutube,\n  faFacebook,\n  faTwitter,\n  faInstagram,\n\tfaGithub\n} from \"@fortawesome/free-brands-svg-icons\";\n\n\nconst GridWrapper = styled.div`\n  // display: grid;\n  // grid-gap: 10px;\n  // margin-top: 1em;\n  // margin-left: 6em;\n  // margin-right: 6em;\n  // grid-template-columns: repeat(12, 1fr);\n  // grid-auto-rows: minmax(25px, auto);\n`;\n\nclass Home extends Component {\n\n  render() {\n    return (\n\n      <GridWrapper>\n      <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"></link>\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"></meta>\n      <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\n        <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\"></script>\n\n\n         <Navbar fixed=\"top\" />\n          <br/>\n\n<div class=\"plate\">\n<Fade left>\n  <h2 class=\"script\"><span>Machine Learning</span></h2>\n  </Fade>\n  </div>\n<br/>\n<br/>\n<br/>\n          <div class=\"row\">\n            <div class=\"col-sm-6\">\n\n              <div class=\"skillstxt\"></div>\n            </div>\n            <div class=\"col-sm-6\">\n\n\n            <div class=\"skills\">\n\n\n\n\n            </div>\n\n            </div>\n          </div>\n          <footer bottom=\"©2020 Copyright\">\n          <div class=\"social\">\n</div>\n<br/>\n<span>\n  ©2020 Copyright<span class=\"footername\"></span>\n  </span>\n</footer>\n\n\n\n  </GridWrapper>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Switch, Route} from 'react-router-dom';\nimport Contact from './Contact';\nimport Projects from './Projects';\nimport Home from './Home';\nimport About from './About';\nimport Academics_and_Skills from './Academics_and_Skills';\n\n\nconst Main = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Home}/>\n    <Route path=\"/about\" component={About}/>\n     <Route path=\"/Academics_and_Skills\" component={Academics_and_Skills}/>\n    <Route path=\"/contact\" component={Contact}/>\n    <Route path=\"/Projects\" component={Projects}/>\n  </Switch>\n)\n\nexport default Main;\n\n// <BrowserRouter>\n  // <div className=\"App\">\n    // <Switch>\n      // <Route exact path=\"/\" component={Home}/>\n      // <Route path=\"/about\" component={About}/>\n      //  <Route path=\"/Academics_and_Skills\" component={Academics_and_Skills}/>\n      // <Route path=\"/contact\" component={Contact}/>\n      // <Route path=\"/Projects\" component={Projects}/>\n    // </Switch>\n  // </div>\n  // </BrowserRouter>\n","// import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n//\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\n\n\nimport React from 'react';\nimport './App.css';\nimport {  Switch, Route } from 'react-router-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport {Layout, Header, Navigation, Drawer, Content, download} from 'react-mdl';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Contact from './components/Contact.js';\nimport Projects from './components/Projects.js';\nimport Academics_and_Skills from './components/Academics_and_Skills';\nimport Main from './components/main';\n\n\nfunction App() {\n  return (\n\n\n\n   <div className=\"App\">\n   <Layout>\n           <head>\n           </head>\n           <Content>\n               <Main/>\n           </Content>\n\n       </Layout>\n   </div>\n     );\n   }\n\n   export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n// const isLocalhost = Boolean(\n//   window.location.hostname === 'localhost' ||\n//     // [::1] is the IPv6 localhost address.\n//     window.location.hostname === '[::1]' ||\n//     // 127.0.0.0/8 are considered localhost for IPv4.\n//     window.location.hostname.match(\n//       /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n//     )\n// );\n//\n// export function register(config) {\n//   if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n//     // The URL constructor is available in all browsers that support SW.\n//     const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n//     if (publicUrl.origin !== window.location.origin) {\n//       // Our service worker won't work if PUBLIC_URL is on a different origin\n//       // from what our page is served on. This might happen if a CDN is used to\n//       // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n//       return;\n//     }\n//\n//     window.addEventListener('load', () => {\n//       const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n//\n//       if (isLocalhost) {\n//         // This is running on localhost. Let's check if a service worker still exists or not.\n//         checkValidServiceWorker(swUrl, config);\n//\n//         // Add some additional logging to localhost, pointing developers to the\n//         // service worker/PWA documentation.\n//         navigator.serviceWorker.ready.then(() => {\n//           console.log(\n//             'This web app is being served cache-first by a service ' +\n//               'worker. To learn more, visit https://bit.ly/CRA-PWA'\n//           );\n//         });\n//       } else {\n//         // Is not localhost. Just register service worker\n//         registerValidSW(swUrl, config);\n//       }\n//     });\n//   }\n// }\n//\n// function registerValidSW(swUrl, config) {\n//   navigator.serviceWorker\n//     .register(swUrl)\n//     .then(registration => {\n//       registration.onupdatefound = () => {\n//         const installingWorker = registration.installing;\n//         if (installingWorker == null) {\n//           return;\n//         }\n//         installingWorker.onstatechange = () => {\n//           if (installingWorker.state === 'installed') {\n//             if (navigator.serviceWorker.controller) {\n//               // At this point, the updated precached content has been fetched,\n//               // but the previous service worker will still serve the older\n//               // content until all client tabs are closed.\n//               console.log(\n//                 'New content is available and will be used when all ' +\n//                   'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n//               );\n//\n//               // Execute callback\n//               if (config && config.onUpdate) {\n//                 config.onUpdate(registration);\n//               }\n//             } else {\n//               // At this point, everything has been precached.\n//               // It's the perfect time to display a\n//               // \"Content is cached for offline use.\" message.\n//               console.log('Content is cached for offline use.');\n//\n//               // Execute callback\n//               if (config && config.onSuccess) {\n//                 config.onSuccess(registration);\n//               }\n//             }\n//           }\n//         };\n//       };\n//     })\n//     .catch(error => {\n//       console.error('Error during service worker registration:', error);\n//     });\n// }\n//\n// function checkValidServiceWorker(swUrl, config) {\n//   // Check if the service worker can be found. If it can't reload the page.\n//   fetch(swUrl, {\n//     headers: { 'Service-Worker': 'script' },\n//   })\n//     .then(response => {\n//       // Ensure service worker exists, and that we really are getting a JS file.\n//       const contentType = response.headers.get('content-type');\n//       if (\n//         response.status === 404 ||\n//         (contentType != null && contentType.indexOf('javascript') === -1)\n//       ) {\n//         // No service worker found. Probably a different app. Reload the page.\n//         navigator.serviceWorker.ready.then(registration => {\n//           registration.unregister().then(() => {\n//             window.location.reload();\n//           });\n//         });\n//       } else {\n//         // Service worker found. Proceed as normal.\n//         registerValidSW(swUrl, config);\n//       }\n//     })\n//     .catch(() => {\n//       console.log(\n//         'No internet connection found. App is running in offline mode.'\n//       );\n//     });\n// }\n//\n// export function unregister() {\n//   if ('serviceWorker' in navigator) {\n//     navigator.serviceWorker.ready\n//       .then(registration => {\n//         registration.unregister();\n//       })\n//       .catch(error => {\n//         console.error(error.message);\n//       });\n//   }\n// }\n\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n//\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n//\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter} from 'react-router-dom';\nimport {  Switch, Route } from 'react-router-dom';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render((\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n\n), document.getElementById('root'))\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}